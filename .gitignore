# IDE #
# IntelliJ
.idea/
*.iml
*.ipr
*.iws
# Eclipse
.classpath
.project
.settings/
# VSCode
.vscode/

# Build Output #
# Maven
target/
# Gradle
build/
out/
# Compiled Java classes
*.class

# Packaged Applications #
*.jar
*.war
*.ear
*.zip
*.tar.gz
*.rar

# Logs #
*.log
logs/

# Local Environment Configuration #
# (application.yml에 민감 정보가 있다면 제외하고, 환경 변수나 외부 설정 파일을 사용하도록 권장)
# application.yml # 이 부분은 아래 "application.yml 처리 방안"을 참고하여 결정하세요.
.env
.env.local
.env.*.local

# Maven #
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties

# Gradle #
.gradle/
# Gradle Wrapper는 버전 관리에 포함하는 것이 일반적입니다.
# !build/wrapper/gradle-wrapper.jar # Gradle을 사용한다면 주석 해제 고려

# Operating System files #
.DS_Store
Thumbs.db
*~
*.swp
*#
.#*

# Temporary files #
*.tmp
*.bak

# NetBeans project files #
nbproject/
nbactions.xml
src/main/resources/application.yml